# two_pixels_heatmap.py
import numpy as np
import matplotlib.pyplot as plt

def random_coeffs(N, seed=0):
    rng = np.random.default_rng(seed)
    C = rng.normal(size=(N+1,N+1)) + 1j*rng.normal(size=(N+1,N+1))
    mask = np.fromfunction(lambda i,j: (i+j)<=N, C.shape, dtype=int)
    Z = np.sum(np.abs(C[mask])**2)
    return np.where(mask, C/np.sqrt(Z), 0.0)

def plot_triangular_heatmap(P):
    N = P.shape[0]-1
    fig, ax = plt.subplots()
    im = ax.imshow(P, origin='lower', extent=(-0.5,N+0.5,-0.5,N+0.5))
    ax.plot([-0.5,N+0.5],[N+0.5,-0.5],'--k')
    ax.set_xlabel('# of e⁻ in pixel 1'); ax.set_ylabel('# of e⁻ in pixel 2')
    plt.colorbar(im, ax=ax).set_label('Probability |c|²')
    plt.show()

if __name__ == "__main__":
    N = 10
    C = random_coeffs(N)
    P = np.abs(C)**2
    P[P==0] = np.nan
    plot_triangular_heatmap(P)
